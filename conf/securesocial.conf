securesocial {
 	#
	# If enabled, sets the path to your copy of Bootstrap.css to be used instead of the default one provided by SecureSocial
	#
	bootstrapCssPath="/assets/lib/bootstrap/css/bootstrap.min.css"

    #
    # Where to redirect the user if SecureSocial can't figure that out from
    # the request that was received before authenticating the user
    #
    onLoginGoTo=/start

    #
    # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
    #
    onLogoutGoTo=/

    #
    # Enable SSL for oauth callback urls and login/signup/password recovery pages
    #
    ssl=false   

    #
    # Session Timeout In Minutes
    #
    sessionTimeOut=60

    #
    # The controller class for assets. This is optional, only required
    # when you use a custom class for Assets.
    #
    #assetsController=controllers.ReverseMyCustomAssetsController

	# See https://github.com/jaliss/securesocial/blob/master/samples/java/demo/conf/securesocial.conf

    # scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email 
	google {
		authorizationUrl="https://accounts.google.com/o/oauth2/auth"
		accessTokenUrl="https://accounts.google.com/o/oauth2/token"
		clientId=your_client_id
		clientSecret=your_client_secret
		scope="profile email"
	}
	
	twitter {
		requestTokenUrl="https://twitter.com/oauth/request_token"
		accessTokenUrl="https://twitter.com/oauth/access_token"
		authorizationUrl="https://twitter.com/oauth/authenticate"
		consumerKey=your_consumer_key
		consumerSecret=your_consumer_secret
	}
	
	facebook {
		authorizationUrl="https://graph.facebook.com/oauth/authorize"
		accessTokenUrl="https://graph.facebook.com/oauth/access_token"
		clientId=your_client_id
		clientSecret=your_client_secret
		# this scope is the minimum SecureSocial requires. You can add more if required by your app.
		scope=email
	}      
}